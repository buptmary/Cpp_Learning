#include <iostream>
using namespace std;

/************************
 * 4.7.3 纯虚函数和抽象类
 ************************/

/********************************************************************
 * 在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容
 * 因此可以将虚函数改为**纯虚函数**，当类中有了纯虚函数，这个类也称为==抽象类==
 *********************************************************************/

/***************************************************
 * **抽象类特点**：
 * - 无法实例化对象
 * - 子类必须重写抽象类中的纯虚函数，否则也属于抽象类
 ***************************************************/

class Base
{
public:
    // 纯虚函数
    // 类中只要有一个纯虚函数就称为抽象类
    // 抽象类无法实例化对象
    // 子类必须重写父类中的纯虚函数，否则也属于抽象类
    virtual void func() = 0;
};

class Son : public Base
{
public:
    void func()
    {
        cout << "Son func()函数调用" << endl;
    }
};

void test1()
{
    Base *base1;
    // base1 = new Base; // 错误，抽象类无法实例化对象
    base1 = new Son;
    base1->func();

    delete base1;
}

int main()
{
    system("chcp 65001");

    test1();

    return 0;
}