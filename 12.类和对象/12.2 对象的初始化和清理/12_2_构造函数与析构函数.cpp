#include <iostream>
using namespace std;

/************************************************************************************
 * C++ 使用构造函数和析构函数对对象进行初始化和清理操作
 * 若用户不提供构造和析构，编译器会提供空白的构造和析构函数
 *
 * 构造函数：
 *     主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用。
 * 析构函数：
 *     主要作用在于对象**销毁前**系统自动调用，执行一些清理工作。
 **************************************************************************************/

class Person
{
public:
    // 构造函数
    /*******************************************************************
     * 构造函数语法: 类名(){}
     *     1. 构造函数，没有返回值也不写void
     *     2. 函数名称与类名相同
     *     3. 构造函数可以有参数，因此可以发生重载
     *     4. 程序在调用对象时候会自动调用构造，无须手动调用,而且只会调用一次
     ********************************************************************/
    Person()
    {
        cout << "Person类的构造函数调用" << endl;
    }

    // 析构函数
    /**********************************************************************
     * 析构函数语法: ~类名(){}
     *     1. 析构函数，没有返回值也不写void
     *     2. 函数名称与类名相同,在名称前加上符号  ~
     *     3. 析构函数不可以有参数，因此不可以发生重载
     *     4. 程序在对象销毁前会自动调用析构，无须手动调用,而且只会调用一次
     ***********************************************************************/
    ~Person()
    {
        cout << "Person类的析构函数调用" << endl;
    }
};

void test1()
{
    Person p1;
}

int main()
{
    system("chcp 65001");
    test1();
    Person p2;
    system("pause");
}