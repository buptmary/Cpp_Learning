#include <iostream>
using namespace std;

/***********************************************
 * 一维数组定义的三种方式：
 * 1. 数据类型 数组名[数组长度];
 * 2. 数据类型 数组名[数组长度] = {值1,值2,值3,...};
 * 3. 数据类型 数组名[ ] = {值1,值2,值3,...};
 ************************************************/

int main()
{
    // 定义方式1
    // 数据类型 数组名[数组长度];
    int score[10];

    // 利用下标赋值，没有赋值的数组元素将会出现随机值
    score[0] = 95;
    score[1] = 92;
    score[3] = 99;

    // 利用下标调用
    cout << score[0] << endl;
    cout << score[1] << endl;
    cout << score[3] << endl;

    // 第二种定义方式
    // 数据类型 数组名[元素个数] =  {值1，值2 ，值3 ...};
    // 如果{}内不足10个数据，剩余数据用0补全
    int score2[10] = {100, 90, 80, 70, 60, 50, 40, 30};

    // 定义一个全0数组
    // int zero_arr[15] = {0};
    // int zero_arr[15] = {};

    for (int i = 0; i < 10; i++)
    {
        cout << score2[i] << endl;
    }

    // 定义方式3
    // 数据类型 数组名[] =  {值1，值2 ，值3 ...};
    int score3[] = {100, 90, 80, 70, 60, 50, 40, 30, 20, 10};

    for (int i = 0; i < 10; i++)
    {
        cout << score3[i] << endl;
    }
}